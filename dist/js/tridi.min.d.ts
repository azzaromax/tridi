declare type ImageArray = ReadonlyArray<string>;
declare type NumberedImages = "numbered";
interface TridiOptions {
    [key: string]: any;
    element: string;
    images?: ImageArray | NumberedImages;
    imageFormat?: string;
    imageCount?: number;
    imageLocation?: string;
    showHintOnStartup?: boolean;
    lazy?: boolean;
    hintText?: string | null;
    draggable?: boolean;
    autoplay?: boolean;
    autoplaySpeed?: number;
    stopAutoplayOnClick?: boolean;
    stopAutoplayOnMouseenter?: boolean;
    resumeAutoplayOnMouseleave?: boolean;
    resumeAutoplayDelay?: number;
    buttons?: boolean;
    scroll?: boolean;
    spinner?: boolean;
    mousewheel?: boolean;
    wheelInverse?: boolean;
    dragInterval?: number;
    touchDragInterval?: number;
    mouseleaveDetect?: boolean;
    touch?: boolean;
    inverse?: boolean;
    playable?: boolean;
}
interface TridiUpdatableOptions {
    [key: string]: any;
    images?: ImageArray | NumberedImages;
    imageFormat?: string;
    imageCount?: number;
    imageLocation?: string;
}
declare class Tridi {
    [key: string]: any;
    element: string;
    images?: ImageArray | NumberedImages;
    imageFormat?: string;
    imageLocation?: string;
    imageCount?: number;
    draggable?: boolean;
    showHintOnStartup?: boolean;
    hintText?: string | null;
    lazy?: boolean;
    autoplay?: boolean;
    autoplaySpeed?: number;
    stopAutoplayOnClick?: boolean;
    stopAutoplayOnMouseenter?: boolean;
    resumeAutoplayOnMouseleave?: boolean;
    resumeAutoplayDelay: number;
    buttons?: boolean;
    scroll?: boolean;
    spinner?: boolean;
    dragInterval?: number;
    touchDragInterval?: number;
    mouseleaveDetect?: boolean;
    touch?: boolean;
    mousewheel?: boolean;
    wheelInverse?: boolean;
    inverse?: boolean;
    private imageIndex;
    private moveBuffer;
    private dragActive;
    private intervals;
    private timeouts;
    constructor(options: TridiOptions);
    private validate;
    private updateOption;
    private validateUpdate;
    private updateOptions;
    private getElem;
    private container;
    private viewer;
    private stash;
    private leftBtn;
    private rightBtn;
    private getHintOverlay;
    private getLoadingScreen;
    private image;
    private firstImage;
    private viewerImage;
    private lazyLoad;
    private imgs;
    private generateViewer;
    private generateLoadingScreen;
    private setLoadingState;
    private generateStash;
    private destroyStash;
    private displayHintOnStartup;
    private populateStash;
    private generateViewerImage;
    private updateViewerImage;
    private nextMove;
    private prevMove;
    private nextFrame;
    private prevFrame;
    private rotateViewerImage;
    private startDragging;
    private stopDragging;
    private resetMoveBuffer;
    private attachCosmeticEvents;
    private attachDragEvents;
    private attachMouseLeaveDetection;
    private attachTouchEvents;
    private attachMousewheelEvents;
    private generateButton;
    private generateButtons;
    private attachButtonEvents;
    private toggleAutoplay;
    private startAutoplay;
    private attachEvents;
    private start;
    updateImageLocation(options: TridiUpdatableOptions, syncFrame?: boolean): void;
    load(): void;
}
